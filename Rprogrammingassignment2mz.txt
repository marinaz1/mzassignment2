so if you follow the format of the two examples given in the assingment for makevector and cachemean 
you can create the cachematrix and cachesolve functions

get the function that returns the vector x
set function that changes the vector 
setmean and get mean are similar to set and get
Set and get will not calculate mean but will store the value in the variable which in this case is m



makeCacheMatrix<-funciton(x=matrix()){
  m<-NULL
  set<<-function(y){
    m<<-NULL
  }
  get<-function()x
  setinverse<-function(solve) m<<-solve
  getinverse<-function()m
  list(set=set, get=get,
       setinverse=setinverse,
       getinverse=getinverse)
}

Computes the inverse of the special matrix
the inverse has been calculated in the makeCacheMatrix
if nothing has changed in the matrix the this function should get the inverse from the cache


cacheSolve <- function(x, ...) {
+         ## Return a matrix that is the inverse of 'x'
+         inv <- x$getInverse()
+         if (!is.null(inv)) {
+                 message("getting cached data")
+                 return(inv)
+         }
+         mat <- x$get()
+         inv <- solve(mat, ...)
+         x$setInverse(inv)
+         inv
+ }
